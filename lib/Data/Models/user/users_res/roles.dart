class Autogenerated {
  bool? status;
  String? message;
  List<Data>? data;

  Autogenerated({this.status, this.message, this.data});

  Autogenerated.fromJson(json) {
    data = <Data>[];
    json.forEach((v) {
      data!.add(new Data.fromJson(v));
    });
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['status'] = this.status;
    data['message'] = this.message;
    if (this.data != null) {
      data['data'] = this.data!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Data {
  int? iD;
  int? active;
  String? createdAt;
  int? createdBy;
  String? fullName;
  int? type;
  String? userName;
  CreatedById? createdById;
  List<UsersHasRoles>? usersHasRoles;

  Data(
      {this.iD,
      this.active,
      this.createdAt,
      this.createdBy,
      this.fullName,
      this.type,
      this.userName,
      this.createdById,
      this.usersHasRoles});

  Data.fromJson(Map<String, dynamic> json) {
    iD = json['ID'];
    active = json['Active'];
    createdAt = json['Created_At'];
    createdBy = json['Created_By'];
    fullName = json['Full_Name'];
    type = json['Type'];
    userName = json['User_Name'];
    createdById = json['CreatedById'] != null
        ? new CreatedById.fromJson(json['CreatedById'])
        : null;
    if (json['users_has_roles'] != null) {
      usersHasRoles = <UsersHasRoles>[];
      json['users_has_roles'].forEach((v) {
        usersHasRoles!.add(new UsersHasRoles.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['ID'] = this.iD;
    data['Active'] = this.active;
    data['Created_At'] = this.createdAt;
    data['Created_By'] = this.createdBy;
    data['Full_Name'] = this.fullName;
    data['Type'] = this.type;
    data['User_Name'] = this.userName;
    if (this.createdById != null) {
      data['CreatedById'] = this.createdById!.toJson();
    }
    if (this.usersHasRoles != null) {
      data['users_has_roles'] =
          this.usersHasRoles!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class CreatedById {
  String? fullName;
  String? userName;

  CreatedById({this.fullName, this.userName});

  CreatedById.fromJson(Map<String, dynamic> json) {
    fullName = json['Full_Name'];
    userName = json['User_Name'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['Full_Name'] = this.fullName;
    data['User_Name'] = this.userName;
    return data;
  }
}

class UsersHasRoles {
  Roles? roles;

  UsersHasRoles({this.roles});

  UsersHasRoles.fromJson(Map<String, dynamic> json) {
    roles = json['roles'] != null ? new Roles.fromJson(json['roles']) : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.roles != null) {
      data['roles'] = this.roles!.toJson();
    }
    return data;
  }
}

class Roles {
  String? name;

  Roles({this.name});

  Roles.fromJson(Map<String, dynamic> json) {
    name = json['Name'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['Name'] = this.name;
    return data;
  }
}
